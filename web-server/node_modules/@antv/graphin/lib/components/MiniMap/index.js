"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _index = require("../../index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultOptions = {
  className: 'graphin-minimap',
  viewportClassName: 'graphin-minimap-viewport',
  // Minimap 中默认展示和主图一样的内容，KeyShape 只展示节点和边的 key shape 部分，delegate表示展示自定义的rect，用户可自定义样式
  type: 'default',
  padding: 50,
  size: [200, 120],
  delegateStyle: {
    fill: '#40a9ff',
    stroke: '#096dd9'
  },
  refresh: true
};
var styles = {
  container: {
    position: 'absolute',
    bottom: 0,
    left: 0,
    background: '#fff',
    boxShadow: '0px 8px 10px -5px rgba(0,0,0,0.2), 0px 16px 24px 2px rgba(0,0,0,0.14), 0px 6px 30px 5px rgba(0,0,0,0.12)'
  }
};
var containerRef = null;
var containerHeight = 120;

var MiniMap = function MiniMap(props) {
  var _React$useContext = _react.default.useContext(_index.GraphinContext),
      graph = _React$useContext.graph;

  var options = props.options,
      _props$style = props.style,
      style = _props$style === void 0 ? {} : _props$style;

  _react.default.useEffect(function () {
    var width = graph.getWidth();
    var height = graph.getHeight();
    var padding = graph.get('fitViewPadding');
    var containerSize = [(width - padding * 2) / (height - padding * 2) * containerHeight, containerHeight];
    var miniMapOptions = Object.assign(Object.assign(Object.assign({
      container: containerRef
    }, defaultOptions), {
      size: containerSize
    }), options);
    var miniMap = new _index.G6.Minimap(miniMapOptions);
    graph.addPlugin(miniMap);
    return function () {
      if (miniMap && !miniMap.destroyed) {
        graph.removePlugin(miniMap);
      }
    };
  }, [options]);

  var mergedStyle = Object.assign(Object.assign({}, styles.container), style);
  return /*#__PURE__*/_react.default.createElement("div", {
    ref: function ref(node) {
      containerRef = node;
    },
    // @ts-ignore
    style: mergedStyle
  });
};

var _default = MiniMap;
exports.default = _default;