import { GraphinContext } from '@antv/graphin';
import React from 'react';

var CreateEdge = function CreateEdge(props) {
  var children = props.children,
      onChange = props.onChange,
      active = props.active,
      onClick = props.onClick;

  var _React$useContext = React.useContext(GraphinContext),
      graph = _React$useContext.graph;

  React.useEffect(function () {
    if (active) {
      graph.addBehaviors({
        // 体验优化在`create-edge`中处理
        type: 'create-edge'
      }, 'default');
      graph.get('canvas').setCursor('crosshair');
    }

    var handleAftercreateedge = function handleAftercreateedge(e) {
      var edges = graph.getEdges().map(function (v) {
        return v.getModel();
      });

      if (onChange) {
        onChange(edges, e.edge);
      }
    };

    graph.on('aftercreateedge', handleAftercreateedge);
    return function () {
      if (graph && !graph.destroyed) {
        graph.removeBehaviors('create-edge', 'default');
        graph.get('canvas').setCursor('default');
        graph.off('aftercreateedge', handleAftercreateedge);
      }
    };
  }, [active, graph, onChange]);
  return (// eslint-disable-next-line jsx-a11y/no-static-element-interactions
    React.createElement("div", {
      className: "graphin-create-edge-icon",
      onClick: onClick
    }, children)
  );
};

export default CreateEdge;