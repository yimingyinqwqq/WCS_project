import React from 'react';
import { GraphinContext } from '@antv/graphin';
var boxShadow = '0px 8px 10px -5px rgba(0,0,0,0.2), 0px 16px 24px 2px rgba(0,0,0,0.14), 0px 6px 30px 5px rgba(0,0,0,0.12)';
var defaultStyle = {
  position: 'absolute',
  top: '0px',
  right: '0px',
  bottom: '0px',
  boxShadow: boxShadow,
  background: '#fff',
  overflowY: 'scroll'
};

var VisSettingPanel = function VisSettingPanel(props) {
  var graphin = React.useContext(GraphinContext);
  var graph = graphin.graph;
  var style = props.style,
      children = props.children;
  var item = graph.findAllByState('node', 'selected')[0] || graph.getNodes()[0];
  var nodeSchema = item.getModel().style;

  var handleNodeStyleChange = function handleNodeStyleChange(schema) {
    var selectedNodes = graph.findAllByState('node', 'selected');

    if (selectedNodes.length === 0) {
      // 则认为是全局样式改变
      graph.getNodes().forEach(function (node) {
        /** 状态有优先级 */
        graph.clearItemStates(node);
        graph.updateItem(node, {
          style: Object.assign({}, schema)
        });
      });
    }

    selectedNodes.forEach(function (node) {
      graph.updateItem(node, {
        style: Object.assign({}, schema)
      });
      graph.setItemState(node, 'selected', false); // eslint-disable-next-line @typescript-eslint/no-explicit-any

      node.getEdges().forEach(function (edge) {
        graph.setItemState(edge, 'selected', false);
      });
    });
  };

  graphin.visSettingPanel = {
    nodeStyleSchema: nodeSchema,
    handleNodeStyleChange: handleNodeStyleChange
  };
  return React.createElement("div", {
    style: Object.assign(Object.assign({}, defaultStyle), style)
  }, children);
};

export default VisSettingPanel;