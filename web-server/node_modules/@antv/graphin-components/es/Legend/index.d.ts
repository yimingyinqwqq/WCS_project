import { EdgeConfig, GraphinContextType, NodeConfig } from '@antv/graphin';
import React from 'react';
import Node from './Node';
export interface LegendProps {
    /** 绑定的类型 */
    bindType: 'node' | 'edge';
    /**
     * @description 分类映射的Key值
     */
    sortKey: string;
    /**
     * @description  颜色映射的Key值
     * @default "style.stroke"
     */
    colorKey?: string;
    /**
     * @description 样式
     */
    style?: React.CSSProperties;
}
export interface OptionType {
    /** 颜色 */
    color: string;
    /** 值 */
    value: string | number;
    /** 标签 */
    label: string;
    /** 是否选中 */
    checked: boolean;
}
export interface LegendContextType extends GraphinContextType {
    legend: {
        node?: {
            bindType: string;
            sortKey: string;
            colorKey: string;
            dataMap: Map<string, NodeConfig[]>;
            options: OptionType[];
        };
        edge?: {
            bindType: string;
            sortKey: string;
            colorKey: string;
            dataMap: Map<string, EdgeConfig[]>;
            options: OptionType[];
        };
    };
}
declare const Legend: React.FunctionComponent<LegendProps> & {
    Node: typeof Node;
};
export default Legend;
